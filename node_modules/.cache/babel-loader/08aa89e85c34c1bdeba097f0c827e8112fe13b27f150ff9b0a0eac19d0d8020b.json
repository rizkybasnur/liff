{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport api from \"@/plugins/axios\";\nimport axios from \"axios\";\nexport default {\n  props: {\n    updateMode: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      isSnackbar: false,\n      snackbarText: \"\",\n      timeout: \"1000\",\n      artistsValue: \"\",\n      videoLink: null,\n      items: [{\n        text: \"Romance\",\n        value: \"ROM\"\n      }, {\n        text: \"Thriller\",\n        value: \"THR\"\n      }, {\n        text: \"Action\",\n        value: \"ACT\"\n      }, {\n        text: \"Comedy\",\n        value: \"COM\"\n      }],\n      search: {\n        title: \"\",\n        duration: 0,\n        artists: [],\n        genres: [],\n        description: \"\",\n        url: \"\",\n        views: 0\n      },\n      isLoading: {\n        upload: false\n      }\n    };\n  },\n  mounted() {\n    if (this.updateMode) {\n      this.search = this.data;\n    }\n  },\n  methods: {\n    addChip() {\n      if (this.artistsValue.trim() !== \"\") {\n        this.search.artists.push(this.artistsValue.trim());\n        this.artistsValue = \"\";\n      }\n    },\n    removeChip(index) {\n      this.search.artists.splice(index, 1);\n    },\n    onSubmit() {\n      if (!this.$refs.form.validate()) return;\n      if (!this.search.url) {\n        this.isSnackbar = true;\n        this.snackbarText = \"Error: Video Not Uploaded\";\n        return;\n      }\n      const payload = this.search;\n      const url = this.updateMode ? \"/updateData\" : \"/saveData\";\n      api.post(url, payload).then(response => {\n        this.isSnackbar = true;\n        this.snackbarText = response.data.message;\n        setTimeout(() => {\n          this.$emit(\"success\");\n          this.search = {\n            title: \"\",\n            duration: 0,\n            artists: [],\n            genres: [],\n            description: \"\",\n            url: \"\",\n            views: 0\n          };\n        }, 1000);\n      }).catch(error => {\n        this.isSnackbar = true;\n        this.snackbarText = error;\n      });\n    },\n    async uploadVideo(event) {\n      const file = event.target.files[0];\n      this.isLoading.upload = true;\n      try {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"upload_preset\", \"ml_default\");\n        const response = await axios.post(\"https://api.cloudinary.com/v1_1/dsle5mlns/video/upload\", formData);\n        this.search.url = response.data.secure_url;\n        this.isLoading.upload = false;\n      } catch (error) {\n        this.isLoading.upload = true;\n        this.isSnackbar = true;\n        this.snackbarText = error;\n      }\n    }\n  }\n};","map":{"version":3,"names":["api","axios","props","updateMode","type","Boolean","default","data","Object","isSnackbar","snackbarText","timeout","artistsValue","videoLink","items","text","value","search","title","duration","artists","genres","description","url","views","isLoading","upload","mounted","methods","addChip","trim","push","removeChip","index","splice","onSubmit","$refs","form","validate","payload","post","then","response","message","setTimeout","$emit","catch","error","uploadVideo","event","file","target","files","formData","FormData","append","secure_url"],"sources":["src/components/FormComponent.vue"],"sourcesContent":["<template>\n  <v-form ref=\"form\" lazy-validation>\n    <v-row>\n      <v-col cols=\"6\">\n        <v-text-field\n          v-model=\"search.title\"\n          outlined\n          :rules=\"[(value) => !!value || '*wajib diisi.']\"\n          label=\"Title\"\n          placeholder=\"Title\"\n        >\n        </v-text-field>\n      </v-col>\n      <v-col cols=\"6\">\n        <v-text-field\n          v-model=\"search.duration\"\n          outlined\n          :rules=\"[(value) => !!value || '*wajib diisi.']\"\n          label=\"Duration\"\n          placeholder=\"Duration\"\n          suffix=\"Minute\"\n          type=\"number\"\n        >\n        </v-text-field>\n      </v-col>\n      <v-col cols=\"6\">\n        <v-text-field\n          v-model=\"artistsValue\"\n          outlined\n          :rules=\"[(value) => search.artists.length > 0 || '*wajib diisi.']\"\n          placeholder=\"Type and press Enter\"\n          @keydown.enter.prevent=\"addChip\"\n          label=\"Artists\"\n        ></v-text-field>\n\n        <v-chip\n          v-for=\"(chip, index) in search.artists\"\n          :key=\"index\"\n          close\n          @input=\"removeChip(index)\"\n          class=\"mr-2\"\n        >\n          {{ chip }}\n        </v-chip>\n      </v-col>\n      <v-col cols=\"6\">\n        <v-select\n          v-model=\"search.genres\"\n          outlined\n          :rules=\"[(value) => value.length > 0 || '*wajib diisi.']\"\n          :items=\"items\"\n          item-text=\"text\"\n          item-value=\"value\"\n          label=\"Genres\"\n          persistent-hint\n          multiple\n        ></v-select>\n      </v-col>\n      <v-col cols=\"6\">\n        <v-textarea\n          v-model=\"search.description\"\n          outlined\n          :rules=\"[(value) => !!value || '*wajib diisi.']\"\n          label=\"Description\"\n          placeholder=\"Description\"\n        >\n        </v-textarea>\n      </v-col>\n      <v-col cols=\"6\">\n        <input type=\"file\" @change=\"uploadVideo\" accept=\"video/*\" />\n        <v-progress-circular\n          v-if=\"isLoading.upload\"\n          indeterminate\n          color=\"red\"\n        ></v-progress-circular>\n        <div v-if=\"search.url\" class=\"d-flex flex-column mt-4\">\n          <video controls :src=\"search.url\" />\n          <a :href=\"search.url\">Video Link</a>\n        </div>\n      </v-col>\n      <v-col class=\"text-right\">\n        <v-btn @click=\"onSubmit\">Submit</v-btn>\n      </v-col>\n    </v-row>\n    <v-snackbar v-model=\"isSnackbar\" :timeout=\"timeout\">\n      {{ snackbarText }}\n    </v-snackbar>\n  </v-form>\n</template>\n\n<script>\nimport api from \"@/plugins/axios\";\nimport axios from \"axios\";\n\nexport default {\n  props: {\n    updateMode: {\n      type: Boolean,\n      default: false,\n    },\n    data: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      isSnackbar: false,\n      snackbarText: \"\",\n      timeout: \"1000\",\n      artistsValue: \"\",\n      videoLink: null,\n      items: [\n        { text: \"Romance\", value: \"ROM\" },\n        { text: \"Thriller\", value: \"THR\" },\n        { text: \"Action\", value: \"ACT\" },\n        { text: \"Comedy\", value: \"COM\" },\n      ],\n      search: {\n        title: \"\",\n        duration: 0,\n        artists: [],\n        genres: [],\n        description: \"\",\n        url: \"\",\n        views: 0,\n      },\n      isLoading: {\n        upload: false,\n      },\n    };\n  },\n  mounted() {\n    if (this.updateMode) {\n      this.search = this.data;\n    }\n  },\n  methods: {\n    addChip() {\n      if (this.artistsValue.trim() !== \"\") {\n        this.search.artists.push(this.artistsValue.trim());\n        this.artistsValue = \"\";\n      }\n    },\n    removeChip(index) {\n      this.search.artists.splice(index, 1);\n    },\n    onSubmit() {\n      if (!this.$refs.form.validate()) return;\n      if (!this.search.url) {\n        this.isSnackbar = true;\n        this.snackbarText = \"Error: Video Not Uploaded\";\n        return;\n      }\n\n      const payload = this.search;\n      const url = this.updateMode ? \"/updateData\" : \"/saveData\";\n      api\n        .post(url, payload)\n        .then((response) => {\n          this.isSnackbar = true;\n          this.snackbarText = response.data.message;\n          setTimeout(() => {\n            this.$emit(\"success\");\n            this.search = {\n              title: \"\",\n              duration: 0,\n              artists: [],\n              genres: [],\n              description: \"\",\n              url: \"\",\n              views: 0,\n            };\n          }, 1000);\n        })\n        .catch((error) => {\n          this.isSnackbar = true;\n          this.snackbarText = error;\n        });\n    },\n    async uploadVideo(event) {\n      const file = event.target.files[0];\n      this.isLoading.upload = true;\n      try {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"upload_preset\", \"ml_default\");\n        const response = await axios.post(\n          \"https://api.cloudinary.com/v1_1/dsle5mlns/video/upload\",\n          formData\n        );\n        this.search.url = response.data.secure_url;\n        this.isLoading.upload = false;\n      } catch (error) {\n        this.isLoading.upload = true;\n        this.isSnackbar = true;\n        this.snackbarText = error;\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";AA2FA,OAAAA,GAAA;AACA,OAAAC,KAAA;AAEA;EACAC,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA,EAAAA,CAAA;QACA;MACA;IACA;EACA;EACAC,KAAA;IACA;MACAE,UAAA;MACAC,YAAA;MACAC,OAAA;MACAC,YAAA;MACAC,SAAA;MACAC,KAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACAC,MAAA;QACAC,KAAA;QACAC,QAAA;QACAC,OAAA;QACAC,MAAA;QACAC,WAAA;QACAC,GAAA;QACAC,KAAA;MACA;MACAC,SAAA;QACAC,MAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,SAAAxB,UAAA;MACA,KAAAc,MAAA,QAAAV,IAAA;IACA;EACA;EACAqB,OAAA;IACAC,QAAA;MACA,SAAAjB,YAAA,CAAAkB,IAAA;QACA,KAAAb,MAAA,CAAAG,OAAA,CAAAW,IAAA,MAAAnB,YAAA,CAAAkB,IAAA;QACA,KAAAlB,YAAA;MACA;IACA;IACAoB,WAAAC,KAAA;MACA,KAAAhB,MAAA,CAAAG,OAAA,CAAAc,MAAA,CAAAD,KAAA;IACA;IACAE,SAAA;MACA,UAAAC,KAAA,CAAAC,IAAA,CAAAC,QAAA;MACA,UAAArB,MAAA,CAAAM,GAAA;QACA,KAAAd,UAAA;QACA,KAAAC,YAAA;QACA;MACA;MAEA,MAAA6B,OAAA,QAAAtB,MAAA;MACA,MAAAM,GAAA,QAAApB,UAAA;MACAH,GAAA,CACAwC,IAAA,CAAAjB,GAAA,EAAAgB,OAAA,EACAE,IAAA,CAAAC,QAAA;QACA,KAAAjC,UAAA;QACA,KAAAC,YAAA,GAAAgC,QAAA,CAAAnC,IAAA,CAAAoC,OAAA;QACAC,UAAA;UACA,KAAAC,KAAA;UACA,KAAA5B,MAAA;YACAC,KAAA;YACAC,QAAA;YACAC,OAAA;YACAC,MAAA;YACAC,WAAA;YACAC,GAAA;YACAC,KAAA;UACA;QACA;MACA,GACAsB,KAAA,CAAAC,KAAA;QACA,KAAAtC,UAAA;QACA,KAAAC,YAAA,GAAAqC,KAAA;MACA;IACA;IACA,MAAAC,YAAAC,KAAA;MACA,MAAAC,IAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,KAAA3B,SAAA,CAAAC,MAAA;MACA;QACA,MAAA2B,QAAA,OAAAC,QAAA;QACAD,QAAA,CAAAE,MAAA,SAAAL,IAAA;QACAG,QAAA,CAAAE,MAAA;QACA,MAAAb,QAAA,SAAAzC,KAAA,CAAAuC,IAAA,CACA,0DACAa,QACA;QACA,KAAApC,MAAA,CAAAM,GAAA,GAAAmB,QAAA,CAAAnC,IAAA,CAAAiD,UAAA;QACA,KAAA/B,SAAA,CAAAC,MAAA;MACA,SAAAqB,KAAA;QACA,KAAAtB,SAAA,CAAAC,MAAA;QACA,KAAAjB,UAAA;QACA,KAAAC,YAAA,GAAAqC,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}